---
description: Project Styling and Design System Principles
globs: 
---

# Project Styling and Design System Principles

1. Project Structure:
- Framework: Next.js 15 App Router
- Directory Structure: Standard src-based layout
- Primary UI Library: shadcn/ui
- Color Scheme: New York / Zinc variant

2. Tailwind CSS Configuration:
- Use a neutral, professional color palette
- Prioritize accessibility and readability
- Implement dark mode support
- Use CSS variables for consistent theming

3. Component Design Principles:
- Consistent spacing (use 4px/8px grid)
- Rounded corners (prefer subtle roundness, ~6-8px)
- Soft shadows for depth
- Smooth transitions (prefer 150-250ms easing)

4. Typography:
- Base font: Inter or similar neutral, clean sans-serif
- Heading scale: Precise, with clear hierarchy
- Line heights: Comfortable readability (1.5 body, 1.2 headings)
- Font weights: Emphasize clarity over extreme variations

5. Color Usage:
- Primary: Zinc/Slate variants
- Accent colors: Minimal, purposeful
- Ensure 4.5:1 contrast ratio for accessibility
- Use semantic color mapping (success, error, warning)

6. Interaction States:
- Hover: Subtle background/border changes
- Active: Slightly darker/more saturated
- Focus: Clear, accessible outline
- Disabled: Reduced opacity, muted interactions

7. Responsive Considerations:
- Mobile-first approach
- Fluid typography
- Adaptive layouts
- Touch-friendly interaction targets (min 44x44px)

Example Tokens/Variables to Generate:
```json
{
  "colors": {
    "background": "hsl(0 0% 100%)",
    "foreground": "hsl(240 10% 3.9%)",
    "primary": {
      "DEFAULT": "hsl(240 5.9% 10%)",
      "foreground": "hsl(0 0% 98%)"
    },
    "secondary": {
      "DEFAULT": "hsl(240 4.8% 95.9%)",
      "foreground": "hsl(240 5.9% 10%)"
    }
  },
  "borderRadius": {
    "lg": "0.5rem",
    "md": "calc(0.5rem - 2px)",
    "sm": "calc(0.5rem - 4px)"
  },
  "typography": {
    "base": "16px",
    "scale": {
      "h1": "2.5rem",
      "h2": "2rem",
      "h3": "1.75rem"
    }
  }
}
```

8. Typography

h1
```
export function TypographyH1() {
  return (
    <h1 className="scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl">
      Taxing Laughter: The Joke Tax Chronicles
    </h1>
  )
}
```

h2
```
export function TypographyH2() {
  return (
    <h2 className="scroll-m-20 border-b pb-2 text-3xl font-semibold tracking-tight first:mt-0">
      The People of the Kingdom
    </h2>
  )
}

```

h3
```
export function TypographyH3() {
  return (
    <h3 className="scroll-m-20 text-2xl font-semibold tracking-tight">
      The Joke Tax
    </h3>
  )
}
```

h4
```
export function TypographyH4() {
  return (
    <h4 className="scroll-m-20 text-xl font-semibold tracking-tight">
      People stopped telling jokes
    </h4>
  )
}
```

p
```
export function TypographyP() {
  return (
    <p className="leading-7 [&:not(:first-child)]:mt-6">
      The king, seeing how much happier his subjects were, realized the error of
      his ways and repealed the joke tax.
    </p>
  )
}
```

blockquote
```
export function TypographyBlockquote() {
  return (
    <blockquote className="mt-6 border-l-2 pl-6 italic">
      "After all," he said, "everyone enjoys a good joke, so it's only fair that
      they should pay for the privilege."
    </blockquote>
  )
}
```

table
```
export function TypographyTable() {
  return (
    <div className="my-6 w-full overflow-y-auto">
      <table className="w-full">
        <thead>
          <tr className="m-0 border-t p-0 even:bg-muted">
            <th className="border px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right">
              King's Treasury
            </th>
            <th className="border px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right">
              People's happiness
            </th>
          </tr>
        </thead>
        <tbody>
          <tr className="m-0 border-t p-0 even:bg-muted">
            <td className="border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right">
              Empty
            </td>
            <td className="border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right">
              Overflowing
            </td>
          </tr>
          <tr className="m-0 border-t p-0 even:bg-muted">
            <td className="border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right">
              Modest
            </td>
            <td className="border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right">
              Satisfied
            </td>
          </tr>
          <tr className="m-0 border-t p-0 even:bg-muted">
            <td className="border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right">
              Full
            </td>
            <td className="border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right">
              Ecstatic
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  )
}
```

list
```
export function TypographyList() {
  return (
    <ul className="my-6 ml-6 list-disc [&>li]:mt-2">
      <li>1st level of puns: 5 gold coins</li>
      <li>2nd level of jokes: 10 gold coins</li>
      <li>3rd level of one-liners : 20 gold coins</li>
    </ul>
  )
}
```

inline code
```
export function TypographyInlineCode() {
  return (
    <code className="relative rounded bg-muted px-[0.3rem] py-[0.2rem] font-mono text-sm font-semibold">
      @radix-ui/react-alert-dialog
    </code>
  )
}
```

Lead
```
export function TypographyLead() {
  return (
    <p className="text-xl text-muted-foreground">
      A modal dialog that interrupts the user with important content and expects
      a response.
    </p>
  )
}
```

Large
```
export function TypographyLarge() {
  return <div className="text-lg font-semibold">Are you absolutely sure?</div>
}
```

Small
```
export function TypographySmall() {
  return (
    <small className="text-sm font-medium leading-none">Email address</small>
  )
}
```

Muted
```
export function TypographyMuted() {
  return (
    <p className="text-sm text-muted-foreground">Enter your email address.</p>
  )
}
```

Specific Guidance:
- Prioritize semantic markup
- Use CSS variables for theming
- Implement proper aria attributes
- Ensure keyboard navigability


